{"version":3,"sources":["webpack:///./src/components/utterances/index.tsx","webpack:///./src/components/postnavigator/styles.tsx","webpack:///./src/components/postnavigator/index.tsx","webpack:///./src/templates/blog-post.tsx"],"names":["Utterances","React","memo","repo","theme","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","LinkLeftWrapper","styled","div","color","linkColor","LinkRightWrapper","PostNavigator","title","slug","left","className","to","length","slice","Section","section","border","dark","primary","PostNavWrppaer","CommentWrppaer","BlogPost","pageContext","post","data","markdownRemark","next","previous","nextTitle","previousTitle","styledTheme","useTheme","ReactHelmet","favicon","keywords","frontmatter","description","dangerouslySetInnerHTML","__html","html","right","isDarkMode"],"mappings":"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","file":"component---src-templates-blog-post-tsx-703fcbd391363599dbb0.js","sourcesContent":["import React, { createRef, useLayoutEffect } from 'react';\r\n\r\nconst src = 'https://utteranc.es/client.js';\r\n\r\nexport interface IUtterancesProps {\r\n    repo: string;\r\n    theme: string;\r\n}\r\n\r\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo, theme }) => {\r\n    const containerRef = createRef<HTMLDivElement>();\r\n\r\n    useLayoutEffect(() => {\r\n        const utterances = document.createElement('script');\r\n\r\n        const attributes = {\r\n            src,\r\n            repo,\r\n            theme,\r\n            'issue-term': 'pathname',\r\n            label: 'comments',\r\n            crossOrigin: 'anonymous',\r\n            async: 'true',\r\n        };\r\n\r\n        Object.entries(attributes).forEach(([key, value]) => {\r\n            utterances.setAttribute(key, value);\r\n        });\r\n\r\n        containerRef?.current!.appendChild(utterances);\r\n    }, [repo]);\r\n\r\n    return <div ref={containerRef} />;\r\n});\r\n\r\nUtterances.displayName = 'Utterances';\r\n\r\nexport default Utterances;\r\n","import styled from 'styled-components';\r\n\r\nexport const LinkLeftWrapper = styled.div`\r\n    width: 40%;\r\n    height: 2em;\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: 8px;\r\n    background-color: ${({ theme }) => theme.color.linkColor};\r\n    padding: 4px;\r\n    .link-title {\r\n        margin-left: 10px;\r\n        font-size: 0.85em;\r\n        padding: 4px;\r\n    }\r\n\r\n    .ban {\r\n        text-decoration: line-through;\r\n        color: rgba(170, 40, 50, 0.96);\r\n    }\r\n`;\r\n\r\nexport const LinkRightWrapper = styled.div`\r\n    width: 40%;\r\n    height: 2em;\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: 8px;\r\n    background-color: ${({ theme }) => theme.color.linkColor};\r\n    padding: 4px;\r\n    justify-content: flex-end;\r\n    .link-title {\r\n        margin-right: 10px;\r\n        font-size: 0.85em;\r\n        padding: 4px;\r\n    }\r\n    .ban {\r\n        text-decoration: line-through;\r\n        color: rgba(170, 40, 50, 0.96);\r\n    }\r\n`;\r\n","import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport { LinkRightWrapper, LinkLeftWrapper } from './styles';\r\n\r\ninterface IpostNavigatorProps {\r\n    slug: string | boolean;\r\n    left: boolean;\r\n    right: boolean;\r\n    title: boolean | string;\r\n}\r\n\r\nconst PostNavigator: React.VFC<IpostNavigatorProps> = ({ title = '', slug = '', left }) => {\r\n    if (left) {\r\n        return slug ? (\r\n            <LinkLeftWrapper>\r\n                <Link className=\"link-title\" to={slug && slug !== true ? slug : '/'}>\r\n                    {title && title != true ? (title.length > 20 ? title.slice(0, 20) + '...' : title) : ''}\r\n                </Link>\r\n            </LinkLeftWrapper>\r\n        ) : (\r\n            <LinkLeftWrapper>\r\n                <a className=\"link-title ban\">NULL</a>\r\n            </LinkLeftWrapper>\r\n        );\r\n    }\r\n\r\n    return slug ? (\r\n        <LinkRightWrapper>\r\n            <Link className=\"link-title\" to={slug && slug !== true ? slug : '/'}>\r\n                {title && title != true ? (title.length > 20 ? title.slice(0, 20) + '...' : title) : ''}\r\n            </Link>\r\n        </LinkRightWrapper>\r\n    ) : (\r\n        <LinkRightWrapper>\r\n            <a className=\"link-title ban\">NULL</a>\r\n        </LinkRightWrapper>\r\n    );\r\n};\r\n\r\nexport default PostNavigator;\r\n","import React, { useEffect } from 'react';\r\nimport { CreatePagesArgs, graphql } from 'gatsby';\r\nimport styled, { useTheme } from 'styled-components';\r\nimport MainComponent from './Layout';\r\nimport ReactHelmet from './ReactHelmet';\r\nimport Utterances from '../components/utterances';\r\nimport PostNavigator from '../components/postnavigator';\r\n\r\nconst Section = styled.section`\r\n    padding: 20px;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    .text {\r\n        padding-bottom: 10px;\r\n        position: relative;\r\n        &::before {\r\n            content: '';\r\n            width: 100%;\r\n            position: absolute;\r\n            left: 0;\r\n            top: 100%;\r\n            margin-bottom: 20px;\r\n            height: 2px;\r\n            border-radius: 8px;\r\n            background-color: ${({ theme }) => theme.color.border};\r\n        }\r\n    }\r\n    .markdown-wrapper {\r\n        font-size: 0.875em;\r\n        color: ${({ theme }) => theme.color.dark};\r\n        padding: 5px;\r\n        p {\r\n            color: ${({ theme }) => theme.color.dark} !important;\r\n            padding-left: 5px;\r\n        }\r\n        h3,\r\n        h1,\r\n        h2,\r\n        h4 {\r\n            padding: 0;\r\n            padding-top: 3px;\r\n            color: inherit;\r\n        }\r\n        pre {\r\n            background-color: ${({ theme }) => theme.color.primary};\r\n        }\r\n    }\r\n`;\r\nconst PostNavWrppaer = styled.div`\r\n    width: 100%;\r\n    padding: 20px;\r\n    padding-left: 45px;\r\n    padding-right: 45px;\r\n    position: relative;\r\n    justify-content: space-between;\r\n    display: flex;\r\n`;\r\n\r\nconst CommentWrppaer = styled.div`\r\n    width: 100%;\r\n    padding: 20px;\r\n    position: relative;\r\n    &::before {\r\n        content: '';\r\n        width: 92%;\r\n        height: 2px;\r\n        background-color: ${({ theme }) => theme.color.border};\r\n        border-radius: 8px;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 4%;\r\n    }\r\n    /* background-color: ${({ theme }) => (theme.isDarkMode ? theme.color.whiteDarker : theme.color.white)}; */\r\n    /* * {\r\n        color: ${({ theme }) => theme.color.black} !important;\r\n    } */\r\n`;\r\n\r\ntype makrDownRemarkType = {\r\n    fileds: {\r\n        slug: string;\r\n    };\r\n    html: string;\r\n    frontmatter: { title: string; tags: string[]; description: string };\r\n};\r\n\r\ninterface dataType extends CreatePagesArgs {\r\n    pageContext: {\r\n        next: false | string;\r\n        previous: false | string;\r\n        slug: string;\r\n        nextTitle: boolean | string;\r\n        previousTitle: boolean | string;\r\n    };\r\n    data: {\r\n        markdownRemark: makrDownRemarkType;\r\n    };\r\n}\r\n\r\nconst BlogPost: React.FC<dataType> = ({ pageContext, data }) => {\r\n    const post = data.markdownRemark;\r\n    const { next, previous, nextTitle, previousTitle } = pageContext;\r\n    const styledTheme = useTheme();\r\n    return (\r\n        <MainComponent>\r\n            <ReactHelmet\r\n                favicon={'https://jaewoong2.github.io/woongs-world/favicon.ico'}\r\n                keywords={post?.frontmatter?.description}\r\n                title={post?.frontmatter?.title}\r\n                description={post?.frontmatter?.description}\r\n            />\r\n            <Section>\r\n                <h1 className=\"text\">{post?.frontmatter.title}</h1>\r\n                <div className=\"markdown-wrapper\" dangerouslySetInnerHTML={{ __html: post?.html ? post?.html : '' }} />\r\n            </Section>\r\n            <PostNavWrppaer>\r\n                <PostNavigator title={previousTitle} slug={previous} right={false} left={true} />\r\n                <PostNavigator title={nextTitle} slug={next} right={true} left={false} />\r\n            </PostNavWrppaer>\r\n            <CommentWrppaer>\r\n                <Utterances\r\n                    repo={'jaewoong2/blog-comment'}\r\n                    theme={styledTheme.isDarkMode ? 'github-dark' : 'github-light'}\r\n                />\r\n            </CommentWrppaer>\r\n        </MainComponent>\r\n    );\r\n};\r\n\r\nexport default BlogPost;\r\n\r\nexport const query = graphql`\r\n    query($slug: String!) {\r\n        markdownRemark(fields: { slug: { eq: $slug } }) {\r\n            fields {\r\n                slug\r\n            }\r\n            html\r\n            frontmatter {\r\n                title\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}