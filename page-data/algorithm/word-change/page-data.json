{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/algorithm/word-change/","result":{"data":{"markdownRemark":{"fields":{"slug":"/algorithm/word-change/"},"html":"<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/43163\"><img src=\"./images/word-change.jpg\" alt=\"문제설명\"></a></p>\n<h2>접근방법</h2>\n<ol>\n<li>서로 다른 알파벳의 갯수가 1개일 때, 현재 탐색하는 단어를 그 단어로 바꾸고, 다음 단어를 확인한다. <code class=\"language-text\">(재귀 함수 사용)</code></li>\n<li>현재 탐색해야하는 단어가 찾아야하는 타겟 단어랑 같다면 현재 <code class=\"language-text\">level</code> 과\n탐색 해왔던 <code class=\"language-text\">level</code> 값중 최솟 값을 저장</li>\n<li>만약 아무 <code class=\"language-text\">level</code> 도 저장이 되어 있지 않으면, 0을 return</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-py line-numbers\"><code class=\"language-py\"><span class=\"token comment\"># 틀린 알파벳의 갯수를 체크해서</span>\n<span class=\"token comment\"># 틀린 알파벳의 갯수가 1보다 크면 False</span>\n<span class=\"token comment\"># 틀린 알파벳의 갯수가 1이면 True를 Return 한다.</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">check_word</span><span class=\"token punctuation\">(</span>next_word<span class=\"token punctuation\">,</span> now_word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    wrong_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>next_word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>        \n        <span class=\"token keyword\">if</span> next_word<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> now_word<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            wrong_count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            \n        <span class=\"token keyword\">if</span> wrong_count <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n<span class=\"token comment\"># `results` 에 최종 레벨(target 단어로의 변환의 완료) 됐을 때, 모든 경우의 단계 값을 넣어줍니다.</span>\n\n<span class=\"token comment\"># level의 최솟값을 return 합니다</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>begin<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> words<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    results <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>now_word<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">,</span> rest_words<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> rest_words<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> now_word <span class=\"token operator\">==</span> target<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">return</span> results<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>level<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">elif</span> level <span class=\"token operator\">&lt;</span> results<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 최솟값으로 갱신하기</span>\n                    results<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> level\n                    <span class=\"token keyword\">return</span>\n\n            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>rest_words<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> check_word<span class=\"token punctuation\">(</span>rest_words<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> now_word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 알파벳이 서로 1개만 다를 경우, 재귀함수를 호출한다. (level을 1을 올려주고, 현재 단어를 제외한 words 배열을 넣어준다)</span>\n                    dfs<span class=\"token punctuation\">(</span>rest_words<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> level <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rest_words<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> rest_words<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    dfs<span class=\"token punctuation\">(</span>begin<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> words<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> results<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> <span class=\"token number\">0</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"[프로그래머스 LV3] 디스크 컨트롤러","tags":["파이썬","알고리즘","algorithm","python","힙","heap"]}}},"pageContext":{"slug":"/algorithm/word-change/","next":"/dev/CustomHooks만들기/","nextTitle":"Custom Hooks 만들기","previous":"/algorithm/network/","previousTitle":"[프로그래머스 LV3] 네트워크"}},"staticQueryHashes":["3501822393"]}